<p>
When running an algorithm live, there are two ways of placing an order
using the method <a href="https://www.quantconnect.com/lean/docs#">MarketOrder</a>: synchronous or asynchronous.
</p>

<h3> Synchronous Market Order</h3>
<p>
Market Orders are sent synchronously by default. This means the method call blocks and waits for an order-filled response from the broker.
In highly liquid markets this fill response is ordinarily immediate; however some illiquid stocks or slow brokerages can take several seconds
to fill a market order. By default, LEAN waits up to 5 seconds to fill a market order, before resuming normal algorithm execution.
</p>
<p>
The $[MarketOrderFillTimeOut,T:QuantConnect.Transactions.MarketOrderFillTimeOut] can be adjusted if your algorithm requires a longer timeout. This is set via the Transactions Manager as shown below. 
Keep in mind this will result in blocking your algorithm for long fills.
</p>
<div class="section-example-container">
<pre class="python">self.Transactions.MarketOrderFillTimeout = TimeSpan.FromMinutes(2)</pre>
<pre class="csharp">Transactions.MarketOrderFillTimeout = TimeSpan.FromMinutes(2);</pre>
</div>

<h3> Asynchronous Market Order</h3>
<p>
This type of market order is sent to a broker without waiting for a market order fill response from the broker. 
This is useful for when you are sending hundreds or thousands of orders such as for universe selection where doing it synchronously would take several minutes.
</p>
<p>
To send a market order asynchronously use the boolean flag on the market order arguement:
</p>
<div class="section-example-container">
<pre class="python">self.MarketOrder("SPY", 100, true, "Async Order")</pre>
<pre class="csharp">MarketOrder("SPY", 100, asynchronous: true);</pre>
</div>
